// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: masterworker.proto
// Protobuf C++ Version: 5.29.0

#include "masterworker.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace masterworker {

inline constexpr TaskResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskResult::TaskResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskResultDefaultTypeInternal() {}
  union {
    TaskResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskResultDefaultTypeInternal _TaskResult_default_instance_;

inline constexpr TaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_reducers_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskRequest::TaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskRequestDefaultTypeInternal() {}
  union {
    TaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskRequestDefaultTypeInternal _TaskRequest_default_instance_;
}  // namespace masterworker
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_masterworker_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_masterworker_2eproto = nullptr;
const ::uint32_t
    TableStruct_masterworker_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskRequest, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskRequest, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskRequest, _impl_.num_reducers_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskResult, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::masterworker::TaskResult, _impl_.user_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::masterworker::TaskRequest)},
        {12, -1, -1, sizeof(::masterworker::TaskResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::masterworker::_TaskRequest_default_instance_._instance,
    &::masterworker::_TaskResult_default_instance_._instance,
};
const char descriptor_table_protodef_masterworker_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022masterworker.proto\022\014masterworker\"V\n\013Ta"
    "skRequest\022\017\n\007task_id\030\001 \001(\t\022\017\n\007payload\030\002 "
    "\001(\t\022\017\n\007user_id\030\003 \001(\t\022\024\n\014num_reducers\030\004 \001"
    "(\005\".\n\nTaskResult\022\017\n\007task_id\030\001 \001(\t\022\017\n\007use"
    "r_id\030\002 \001(\t2Y\n\023MasterWorkerService\022B\n\013Exe"
    "cuteTask\022\031.masterworker.TaskRequest\032\030.ma"
    "sterworker.TaskResultb\006proto3"
};
static ::absl::once_flag descriptor_table_masterworker_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_masterworker_2eproto = {
    false,
    false,
    269,
    descriptor_table_protodef_masterworker_2eproto,
    "masterworker.proto",
    &descriptor_table_masterworker_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_masterworker_2eproto::offsets,
    file_level_enum_descriptors_masterworker_2eproto,
    file_level_service_descriptors_masterworker_2eproto,
};
namespace masterworker {
// ===================================================================

class TaskRequest::_Internal {
 public:
};

TaskRequest::TaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:masterworker.TaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE TaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::masterworker::TaskRequest& from_msg)
      : task_id_(arena, from.task_id_),
        payload_(arena, from.payload_),
        user_id_(arena, from.user_id_),
        _cached_size_{0} {}

TaskRequest::TaskRequest(
    ::google::protobuf::Arena* arena,
    const TaskRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.num_reducers_ = from._impl_.num_reducers_;

  // @@protoc_insertion_point(copy_constructor:masterworker.TaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE TaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        payload_(arena),
        user_id_(arena),
        _cached_size_{0} {}

inline void TaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_reducers_ = {};
}
TaskRequest::~TaskRequest() {
  // @@protoc_insertion_point(destructor:masterworker.TaskRequest)
  SharedDtor(*this);
}
inline void TaskRequest::SharedDtor(MessageLite& self) {
  TaskRequest& this_ = static_cast<TaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.payload_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskRequest(arena);
}
constexpr auto TaskRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskRequest),
                                            alignof(TaskRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskRequest>(), &TaskRequest::ByteSizeLong,
            &TaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_._cached_size_),
        false,
    },
    &TaskRequest::kDescriptorMethods,
    &descriptor_table_masterworker_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2> TaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::masterworker::TaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 num_reducers = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskRequest, _impl_.num_reducers_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.num_reducers_)}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.task_id_)}},
    // string payload = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.payload_)}},
    // string user_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string payload = 2;
    {PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 3;
    {PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 num_reducers = 4;
    {PROTOBUF_FIELD_OFFSET(TaskRequest, _impl_.num_reducers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\30\7\7\7\0\0\0\0"
    "masterworker.TaskRequest"
    "task_id"
    "payload"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void TaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:masterworker.TaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.num_reducers_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskRequest& this_ = static_cast<const TaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:masterworker.TaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "masterworker.TaskRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string payload = 2;
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "masterworker.TaskRequest.payload");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string user_id = 3;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "masterworker.TaskRequest.user_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 num_reducers = 4;
          if (this_._internal_num_reducers() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_num_reducers(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:masterworker.TaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskRequest::ByteSizeLong(const MessageLite& base) {
          const TaskRequest& this_ = static_cast<const TaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskRequest::ByteSizeLong() const {
          const TaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:masterworker.TaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string payload = 2;
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_payload());
            }
            // string user_id = 3;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // int32 num_reducers = 4;
            if (this_._internal_num_reducers() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_reducers());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskRequest*>(&to_msg);
  auto& from = static_cast<const TaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:masterworker.TaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_num_reducers() != 0) {
    _this->_impl_.num_reducers_ = from._impl_.num_reducers_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskRequest::CopyFrom(const TaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterworker.TaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskRequest::InternalSwap(TaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
        swap(_impl_.num_reducers_, other->_impl_.num_reducers_);
}

::google::protobuf::Metadata TaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskResult::_Internal {
 public:
};

TaskResult::TaskResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:masterworker.TaskResult)
}
inline PROTOBUF_NDEBUG_INLINE TaskResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::masterworker::TaskResult& from_msg)
      : task_id_(arena, from.task_id_),
        user_id_(arena, from.user_id_),
        _cached_size_{0} {}

TaskResult::TaskResult(
    ::google::protobuf::Arena* arena,
    const TaskResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:masterworker.TaskResult)
}
inline PROTOBUF_NDEBUG_INLINE TaskResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        user_id_(arena),
        _cached_size_{0} {}

inline void TaskResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TaskResult::~TaskResult() {
  // @@protoc_insertion_point(destructor:masterworker.TaskResult)
  SharedDtor(*this);
}
inline void TaskResult::SharedDtor(MessageLite& self) {
  TaskResult& this_ = static_cast<TaskResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TaskResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskResult(arena);
}
constexpr auto TaskResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskResult),
                                            alignof(TaskResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskResult>(), &TaskResult::ByteSizeLong,
            &TaskResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._cached_size_),
        false,
    },
    &TaskResult::kDescriptorMethods,
    &descriptor_table_masterworker_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> TaskResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::masterworker::TaskResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string user_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.user_id_)}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 2;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\7\7\0\0\0\0\0"
    "masterworker.TaskResult"
    "task_id"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void TaskResult::Clear() {
// @@protoc_insertion_point(message_clear_start:masterworker.TaskResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskResult& this_ = static_cast<const TaskResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:masterworker.TaskResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "masterworker.TaskResult.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string user_id = 2;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "masterworker.TaskResult.user_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:masterworker.TaskResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskResult::ByteSizeLong(const MessageLite& base) {
          const TaskResult& this_ = static_cast<const TaskResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskResult::ByteSizeLong() const {
          const TaskResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:masterworker.TaskResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string user_id = 2;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskResult*>(&to_msg);
  auto& from = static_cast<const TaskResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:masterworker.TaskResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskResult::CopyFrom(const TaskResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterworker.TaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskResult::InternalSwap(TaskResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata TaskResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace masterworker
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_masterworker_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
